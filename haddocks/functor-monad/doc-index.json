[{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Flip1\">Flip1</a> t a b c = <a href=\"#v:Flip1\">Flip1</a> {<ul class=\"subs\"><li><a href=\"#v:unFlip1\">unFlip1</a> :: t b a c</li></ul>}","name":"Flip1 unFlip1 Flip1","module":"Data.Functor.Flip1","link":"Data-Functor-Flip1.html#t:Flip1"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-126--62-\">(~&gt;)</a> f g = <span class=\"keyword\">forall</span> x. f x -&gt; g x","name":"~>","module":"FFunctor","link":"FFunctor.html#t:-126--62-"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> g. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (ff g)) =&gt; <a href=\"#t:FFunctor\">FFunctor</a> ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ffmap\">ffmap</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> h) -&gt; ff g x -&gt; ff h x</li></ul>","name":"FFunctor ffmap","module":"FFunctor","link":"FFunctor.html#t:FFunctor"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FUNCTOR\">FUNCTOR</a> = <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>","name":"FUNCTOR","module":"FFunctor","link":"FFunctor.html#t:FUNCTOR"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FF\">FF</a> = <a href=\"FFunctor.html#t:FUNCTOR\" title=\"FFunctor\">FUNCTOR</a> -&gt; <a href=\"FFunctor.html#t:FUNCTOR\" title=\"FFunctor\">FUNCTOR</a>","name":"FF","module":"FFunctor","link":"FFunctor.html#t:FF"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-126--62-\">(~&gt;)</a> f g = <span class=\"keyword\">forall</span> x. f x -&gt; g x","name":"~>","module":"FComonad","link":"FComonad.html#t:-126--62-"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> g. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (ff g)) =&gt; <a href=\"#t:FFunctor\">FFunctor</a> ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ffmap\">ffmap</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (g <a href=\"FComonad.html#t:-126--62-\" title=\"FComonad\">~&gt;</a> h) -&gt; ff g x -&gt; ff h x</li></ul>","name":"FFunctor ffmap","module":"FComonad","link":"FComonad.html#t:FFunctor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"FComonad.html#t:FFunctor\" title=\"FComonad\">FFunctor</a> ff =&gt; <a href=\"#t:FComonad\">FComonad</a> ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fextract\">fextract</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; ff g <a href=\"FComonad.html#t:-126--62-\" title=\"FComonad\">~&gt;</a> g</li><li><a href=\"#v:fextend\">fextend</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (ff g <a href=\"FComonad.html#t:-126--62-\" title=\"FComonad\">~&gt;</a> h) -&gt; ff g <a href=\"FComonad.html#t:-126--62-\" title=\"FComonad\">~&gt;</a> ff h</li></ul>","name":"FComonad fextract fextend","module":"FComonad","link":"FComonad.html#t:FComonad"},{"display_html":"<a href=\"#v:fduplicate\">fduplicate</a> :: (<a href=\"FComonad.html#t:FComonad\" title=\"FComonad\">FComonad</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; ff g <a href=\"FComonad.html#t:-126--62-\" title=\"FComonad\">~&gt;</a> ff (ff g)","name":"fduplicate","module":"FComonad","link":"FComonad.html#v:fduplicate"},{"display_html":"<a href=\"#v:uncurried\">uncurried</a> :: <span class=\"keyword\">forall</span> f g h c. (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> f (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> g h) c -&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> f g) h c","name":"uncurried","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:uncurried"},{"display_html":"<a href=\"#v:curried\">curried</a> :: <span class=\"keyword\">forall</span> f g h c. (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> f g) h c -&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> f (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> g h) c","name":"curried","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:curried"},{"display_html":"<a href=\"#v:unitCurried\">unitCurried</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> g g","name":"unitCurried","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:unitCurried"},{"display_html":"<a href=\"#v:composeCurried\">composeCurried</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> f g) (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> g h) <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> f h","name":"composeCurried","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:composeCurried"},{"display_html":"<a href=\"#v:dayToEnv\">dayToEnv</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s0) f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Env.html#t:EnvT\" title=\"Control.Comonad.Trans.Env\">EnvT</a> s0 f","name":"dayToEnv","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:dayToEnv"},{"display_html":"<a href=\"#v:envToDay\">envToDay</a> :: <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Env.html#t:EnvT\" title=\"Control.Comonad.Trans.Env\">EnvT</a> s0 f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s0) f","name":"envToDay","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:envToDay"},{"display_html":"<a href=\"#v:curriedToReader\">curriedToReader</a> :: <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s0) f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> s0 f","name":"curriedToReader","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:curriedToReader"},{"display_html":"<a href=\"#v:readerToCurried\">readerToCurried</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f =&gt; <a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> s0 f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s0) f","name":"readerToCurried","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:readerToCurried"},{"display_html":"<a href=\"#v:dayToTraced\">dayToTraced</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> ((-&gt;) s1) f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Traced.html#t:TracedT\" title=\"Control.Comonad.Trans.Traced\">TracedT</a> s1 f","name":"dayToTraced","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:dayToTraced"},{"display_html":"<a href=\"#v:tracedToDay\">tracedToDay</a> :: <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Traced.html#t:TracedT\" title=\"Control.Comonad.Trans.Traced\">TracedT</a> s1 f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> ((-&gt;) s1) f","name":"tracedToDay","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:tracedToDay"},{"display_html":"<a href=\"#v:curriedToWriter\">curriedToWriter</a> :: <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> ((-&gt;) s1) f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> s1 f","name":"curriedToWriter","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:curriedToWriter"},{"display_html":"<a href=\"#v:writerToCurried\">writerToCurried</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f =&gt; <a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> s1 f <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> ((-&gt;) s1) f","name":"writerToCurried","module":"Data.Functor.Day.Extra","link":"Data-Functor-Day-Extra.html#v:writerToCurried"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FCompose\">FCompose</a> ff gg h x = <a href=\"#v:FCompose\">FCompose</a> {<ul class=\"subs\"><li><a href=\"#v:getFCompose\">getFCompose</a> :: ff (gg h) x</li></ul>}","name":"FCompose getFCompose FCompose","module":"FFunctor.FCompose","link":"FFunctor-FCompose.html#t:FCompose"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-8858-\">(&#8858;)</a> = <a href=\"FFunctor-FCompose.html#t:FCompose\" title=\"FFunctor.FCompose\">FCompose</a>","name":"⊚","module":"FFunctor.FCompose","link":"FFunctor-FCompose.html#t:-8858-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-126--62-\">(~&gt;)</a> f g = <span class=\"keyword\">forall</span> x. f x -&gt; g x","name":"~>","module":"FMonad","link":"FMonad.html#t:-126--62-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"FMonad.html#t:FFunctor\" title=\"FMonad\">FFunctor</a> ff =&gt; <a href=\"#t:FMonad\">FMonad</a> ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fpure\">fpure</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; g <a href=\"FMonad.html#t:-126--62-\" title=\"FMonad\">~&gt;</a> ff g</li><li><a href=\"#v:fbind\">fbind</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (g <a href=\"FMonad.html#t:-126--62-\" title=\"FMonad\">~&gt;</a> ff h) -&gt; ff g a -&gt; ff h a</li></ul>","name":"FMonad fpure fbind","module":"FMonad","link":"FMonad.html#t:FMonad"},{"display_html":"<a href=\"#v:fjoin\">fjoin</a> :: (<a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; ff (ff g) <a href=\"FMonad.html#t:-126--62-\" title=\"FMonad\">~&gt;</a> ff g","name":"fjoin","module":"FMonad","link":"FMonad.html#v:fjoin"},{"display_html":"<span class=\"keyword\">class</span> (<span class=\"keyword\">forall</span> g. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> (ff g)) =&gt; <a href=\"#t:FFunctor\">FFunctor</a> ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ffmap\">ffmap</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (g <a href=\"FMonad.html#t:-126--62-\" title=\"FMonad\">~&gt;</a> h) -&gt; ff g x -&gt; ff h x</li></ul>","name":"FFunctor ffmap","module":"FMonad","link":"FMonad.html#t:FFunctor"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t::.:\">(:.:)</a> = <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor-Compose.html#t:Compose\" title=\"Data.Functor.Compose\">Compose</a>","name":":.:","module":"Data.Functor.Precompose","link":"Data-Functor-Precompose.html#t::.:"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Precompose\">Precompose</a> f g a = <a href=\"#v:Precompose\">Precompose</a> {<ul class=\"subs\"><li><a href=\"#v:getPrecompose\">getPrecompose</a> :: g (f a)</li></ul>}","name":"Precompose getPrecompose Precompose","module":"Data.Functor.Precompose","link":"Data-Functor-Precompose.html#t:Precompose"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu) =&gt; <a href=\"#t:Adjunction\">Adjunction</a> ff uu | ff -&gt; uu, uu -&gt; ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:unit\">unit</a> :: <span class=\"keyword\">forall</span> g. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> uu (ff g)</li><li><a href=\"#v:counit\">counit</a> :: <span class=\"keyword\">forall</span> g. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; ff (uu g) <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> g</li><li><a href=\"#v:leftAdjunct\">leftAdjunct</a> :: <span class=\"keyword\">forall</span> g h. (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> h) -&gt; g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> uu h</li><li><a href=\"#v:rightAdjunct\">rightAdjunct</a> :: <span class=\"keyword\">forall</span> g h. (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; (g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> uu h) -&gt; ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> h</li></ul>","name":"Adjunction unit counit leftAdjunct rightAdjunct","module":"FFunctor.Adjunction","link":"FFunctor-Adjunction.html#t:Adjunction"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Bicompose\">Bicompose</a> f g h a = <a href=\"#v:Bicompose\">Bicompose</a> {<ul class=\"subs\"><li><a href=\"#v:getBicompose\">getBicompose</a> :: f (h (g a))</li></ul>}","name":"Bicompose getBicompose Bicompose","module":"Data.Functor.Bicompose","link":"Data-Functor-Bicompose.html#t:Bicompose"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Trail\">Trail</a> mm a = <a href=\"#v:Trail\">Trail</a> {<ul class=\"subs\"><li><a href=\"#v:runTrail\">runTrail</a> :: mm (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> a) ()</li></ul>}","name":"Trail Trail runTrail","module":"Control.Monad.Trail","link":"Control-Monad-Trail.html#t:Trail"},{"display_html":"module <a href=\"FMonad.html\">FMonad</a>","name":"","module":"FMonad.FreeT","link":""},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreeT\">FreeT</a> f m b = <a href=\"#v:WrapFreeT\">WrapFreeT</a> {<ul class=\"subs\"><li><a href=\"#v:unwrapFreeT\">unwrapFreeT</a> :: <a href=\"http://hackage.haskell.org/packages/archive/free/latest/doc/html/Control-Monad-Trans-Free.html#t:FreeT\" title=\"Control.Monad.Trans.Free\">FreeT</a> f m b</li></ul>}","name":"FreeT WrapFreeT unwrapFreeT","module":"FMonad.FreeT","link":"FMonad-FreeT.html#t:FreeT"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:FreeT-39-\">FreeT'</a> m f b = <a href=\"#v:WrapFreeT-39-\">WrapFreeT'</a> {<ul class=\"subs\"><li><a href=\"#v:unwrapFreeT-39-\">unwrapFreeT'</a> :: <a href=\"http://hackage.haskell.org/packages/archive/free/latest/doc/html/Control-Monad-Trans-Free.html#t:FreeT\" title=\"Control.Monad.Trans.Free\">FreeT</a> f m b</li></ul>}","name":"FreeT' WrapFreeT' unwrapFreeT'","module":"FMonad.FreeT","link":"FMonad-FreeT.html#t:FreeT-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff =&gt; <a href=\"#t:FStrong\">FStrong</a> ff <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fstrength\">fstrength</a> :: <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> (ff g) h <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> ff (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> g h)</li><li><a href=\"#v:mapCurried\">mapCurried</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> g h <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day-Curried.html#t:Curried\" title=\"Data.Functor.Day.Curried\">Curried</a> (ff g) (ff h)</li></ul>","name":"FStrong mapCurried fstrength","module":"FStrong","link":"FStrong.html#t:FStrong"},{"display_html":"<a href=\"#v:fstrength-39-\">fstrength'</a> :: (<a href=\"FStrong.html#t:FStrong\" title=\"FStrong\">FStrong</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h) =&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> g (ff h) <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> ff (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> g h)","name":"fstrength'","module":"FStrong","link":"FStrong.html#v:fstrength-39-"},{"display_html":"<a href=\"#v:innerAp\">innerAp</a> :: (<a href=\"FStrong.html#t:FStrong\" title=\"FStrong\">FStrong</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> h) =&gt; ff h (a -&gt; b) -&gt; h a -&gt; ff h b","name":"innerAp","module":"FStrong","link":"FStrong.html#v:innerAp"},{"display_html":"<a href=\"#v:fap\">fap</a> :: (<a href=\"FStrong.html#t:FStrong\" title=\"FStrong\">FStrong</a> mm, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> h) =&gt; mm h (a -&gt; b) -&gt; mm h a -&gt; mm h b","name":"fap","module":"FStrong","link":"FStrong.html#v:fap"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FFree\">FFree</a> ff g x<ul class=\"subs\"><li>= <a href=\"#v:FPure\">FPure</a> (g x)</li><li>| <a href=\"#v:FFree\">FFree</a> (ff (<a href=\"FMonad-FFree.html#t:FFree\" title=\"FMonad.FFree\">FFree</a> ff g) x)</li></ul>","name":"FFree FPure FFree","module":"FMonad.FFree","link":"FMonad-FFree.html#t:FFree"},{"display_html":"<a href=\"#v:iter\">iter</a> :: <span class=\"keyword\">forall</span> ff g. (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; (ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> g) -&gt; <a href=\"FMonad-FFree.html#t:FFree\" title=\"FMonad.FFree\">FFree</a> ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> g","name":"iter","module":"FMonad.FFree","link":"FMonad-FFree.html#v:iter"},{"display_html":"<a href=\"#v:foldFFree\">foldFFree</a> :: <span class=\"keyword\">forall</span> ff mm g. (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; (<span class=\"keyword\">forall</span> h. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> h =&gt; ff h <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> mm h) -&gt; <a href=\"FMonad-FFree.html#t:FFree\" title=\"FMonad.FFree\">FFree</a> ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> mm g","name":"foldFFree","module":"FMonad.FFree","link":"FMonad-FFree.html#v:foldFFree"},{"display_html":"<a href=\"#v:retract\">retract</a> :: (<a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; <a href=\"FMonad-FFree.html#t:FFree\" title=\"FMonad.FFree\">FFree</a> ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> ff g","name":"retract","module":"FMonad.FFree","link":"FMonad-FFree.html#v:retract"},{"display_html":"<a href=\"#v:liftF\">liftF</a> :: (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> g) =&gt; ff g <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-FFree.html#t:FFree\" title=\"FMonad.FFree\">FFree</a> ff g","name":"liftF","module":"FMonad.FFree","link":"FMonad-FFree.html#v:liftF"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Adjoint\">Adjoint</a> ff uu = <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> ff uu <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"Adjoint","module":"FMonad.Adjoint","link":"FMonad-Adjoint.html#t:Adjoint"},{"display_html":"<a href=\"#v:adjoint\">adjoint</a> :: (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; uu (ff x) <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-Adjoint.html#t:Adjoint\" title=\"FMonad.Adjoint\">Adjoint</a> ff uu x","name":"adjoint","module":"FMonad.Adjoint","link":"FMonad-Adjoint.html#v:adjoint"},{"display_html":"<a href=\"#v:runAdjoint\">runAdjoint</a> :: (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; <a href=\"FMonad-Adjoint.html#t:Adjoint\" title=\"FMonad.Adjoint\">Adjoint</a> ff uu x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> uu (ff x)","name":"runAdjoint","module":"FMonad.Adjoint","link":"FMonad-Adjoint.html#v:runAdjoint"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AdjointT\">AdjointT</a> ff uu mm g x = <a href=\"#v:AdjointT\">AdjointT</a> {<ul class=\"subs\"><li><a href=\"#v:runAdjointT\">runAdjointT</a> :: uu (mm (ff g)) x</li></ul>}","name":"AdjointT AdjointT runAdjointT","module":"FMonad.Adjoint","link":"FMonad-Adjoint.html#t:AdjointT"},{"display_html":"<a href=\"#v:fffmap\">fffmap</a> :: <span class=\"keyword\">forall</span> mm nn ff uu x. (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> nn, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; (<span class=\"keyword\">forall</span> y. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> y =&gt; mm y <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> nn y) -&gt; <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> ff uu mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> ff uu nn x","name":"fffmap","module":"FMonad.Adjoint","link":"FMonad-Adjoint.html#v:fffmap"},{"display_html":"<a href=\"#v:generalize\">generalize</a> :: (<a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; <a href=\"FMonad-Adjoint.html#t:Adjoint\" title=\"FMonad.Adjoint\">Adjoint</a> ff uu x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> ff uu mm x","name":"generalize","module":"FMonad.Adjoint","link":"FMonad-Adjoint.html#v:generalize"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StateT\">StateT</a> s0 mm x a = <a href=\"#v:StateT\">StateT</a> {<ul class=\"subs\"><li><a href=\"#v:runStateT\">runStateT</a> :: s0 -&gt; mm (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Env.html#t:EnvT\" title=\"Control.Comonad.Trans.Env\">EnvT</a> s0 x) a</li></ul>}","name":"StateT StateT runStateT","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#t:StateT"},{"display_html":"<a href=\"#v:flift\">flift</a> :: (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 mm x","name":"flift","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#v:flift"},{"display_html":"<a href=\"#v:fromAdjointT\">fromAdjointT</a> :: <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Env.html#t:EnvT\" title=\"Control.Comonad.Trans.Env\">EnvT</a> s0) (<a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> s0) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 mm x","name":"fromAdjointT","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#v:fromAdjointT"},{"display_html":"<a href=\"#v:toAdjointT\">toAdjointT</a> :: <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Env.html#t:EnvT\" title=\"Control.Comonad.Trans.Env\">EnvT</a> s0) (<a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Reader.html#t:ReaderT\" title=\"Control.Monad.Reader\">ReaderT</a> s0) mm x","name":"toAdjointT","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#v:toAdjointT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:State\">State</a> s0 = <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"State","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#t:State"},{"display_html":"<a href=\"#v:state\">state</a> :: <span class=\"keyword\">forall</span> s0 x mm a. (<a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; (s0 -&gt; (x a, s0)) -&gt; <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 mm x a","name":"state","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#v:state"},{"display_html":"<a href=\"#v:runState\">runState</a> :: <span class=\"keyword\">forall</span> s0 x a. <a href=\"FMonad-State-Simple-Outer.html#t:State\" title=\"FMonad.State.Simple.Outer\">State</a> s0 x a -&gt; s0 -&gt; (x a, s0)","name":"runState","module":"FMonad.State.Simple.Outer","link":"FMonad-State-Simple-Outer.html#v:runState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StateT\">StateT</a> s1 mm x a = <a href=\"#v:StateT\">StateT</a> {<ul class=\"subs\"><li><a href=\"#v:runStateT\">runStateT</a> :: mm (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Traced.html#t:TracedT\" title=\"Control.Comonad.Trans.Traced\">TracedT</a> s1 x) (a, s1)</li></ul>}","name":"StateT StateT runStateT","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#t:StateT"},{"display_html":"<a href=\"#v:flift\">flift</a> :: (<a href=\"FStrong.html#t:FStrong\" title=\"FStrong\">FStrong</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x","name":"flift","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#v:flift"},{"display_html":"<a href=\"#v:toAdjointT\">toAdjointT</a> :: <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Traced.html#t:TracedT\" title=\"Control.Comonad.Trans.Traced\">TracedT</a> s1) (<a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> s1) mm x","name":"toAdjointT","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#v:toAdjointT"},{"display_html":"<a href=\"#v:fromAdjointT\">fromAdjointT</a> :: <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Traced.html#t:TracedT\" title=\"Control.Comonad.Trans.Traced\">TracedT</a> s1) (<a href=\"http://hackage.haskell.org/packages/archive/mtl/latest/doc/html/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> s1) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x","name":"fromAdjointT","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#v:fromAdjointT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:State\">State</a> s1 = <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"State","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#t:State"},{"display_html":"<a href=\"#v:state\">state</a> :: <span class=\"keyword\">forall</span> s1 x mm a. (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; x (s1 -&gt; (a, s1)) -&gt; <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x a","name":"state","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#v:state"},{"display_html":"<a href=\"#v:runState\">runState</a> :: <a href=\"FMonad-State-Simple-Inner.html#t:State\" title=\"FMonad.State.Simple.Inner\">State</a> s1 x a -&gt; x (s1 -&gt; (a, s1))","name":"runState","module":"FMonad.State.Simple.Inner","link":"FMonad-State-Simple-Inner.html#v:runState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StateT\">StateT</a> s mm x a = <a href=\"#v:StateT\">StateT</a> {<ul class=\"subs\"><li><a href=\"#v:runStateT\">runStateT</a> :: <span class=\"keyword\">forall</span> r. (a -&gt; s r) -&gt; mm (<a href=\"Data-Functor-Precompose.html#t:Precompose\" title=\"Data.Functor.Precompose\">Precompose</a> s x) r</li></ul>}","name":"StateT StateT runStateT","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#t:StateT"},{"display_html":"<a href=\"#v:toInner\">toInner</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> ((-&gt;) s1) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x","name":"toInner","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:toInner"},{"display_html":"<a href=\"#v:fromInner\">fromInner</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> ((-&gt;) s1) mm x","name":"fromInner","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:fromInner"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:State\">State</a> s = <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> s <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"State","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#t:State"},{"display_html":"<a href=\"#v:state\">state</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> s, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; (<span class=\"keyword\">forall</span> r. (a -&gt; s r) -&gt; x (s r)) -&gt; <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> s mm x a","name":"state","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:state"},{"display_html":"<a href=\"#v:state_\">state_</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> s, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; (<span class=\"keyword\">forall</span> r. s r -&gt; x (s r)) -&gt; <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> s mm x ()","name":"state_","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:state_"},{"display_html":"<a href=\"#v:get\">get</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad.html#t:Comonad\" title=\"Control.Comonad\">Comonad</a> s, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> s mm s ()","name":"get","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:get"},{"display_html":"<a href=\"#v:put\">put</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad.html#t:Comonad\" title=\"Control.Comonad\">Comonad</a> s, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; s a -&gt; <a href=\"FMonad-State-Ran.html#t:StateT\" title=\"FMonad.State.Ran\">StateT</a> s mm <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a","name":"put","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:put"},{"display_html":"<a href=\"#v:runState\">runState</a> :: <a href=\"FMonad-State-Ran.html#t:State\" title=\"FMonad.State.Ran\">State</a> s x a -&gt; (a -&gt; s r) -&gt; x (s r)","name":"runState","module":"FMonad.State.Ran","link":"FMonad-State-Ran.html#v:runState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StateT\">StateT</a> s mm x a = <a href=\"#v:StateT\">StateT</a> {<ul class=\"subs\"><li><a href=\"#v:runStateT\">runStateT</a> :: mm (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Kan-Lan.html#t:Lan\" title=\"Data.Functor.Kan.Lan\">Lan</a> s x) (s a)</li></ul>}","name":"StateT StateT runStateT","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#t:StateT"},{"display_html":"<a href=\"#v:fromAdjointT\">fromAdjointT</a> :: <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Kan-Lan.html#t:Lan\" title=\"Data.Functor.Kan.Lan\">Lan</a> s) (<a href=\"Data-Functor-Precompose.html#t:Precompose\" title=\"Data.Functor.Precompose\">Precompose</a> s) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Lan.html#t:StateT\" title=\"FMonad.State.Lan\">StateT</a> s mm x","name":"fromAdjointT","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#v:fromAdjointT"},{"display_html":"<a href=\"#v:toAdjointT\">toAdjointT</a> :: <a href=\"FMonad-State-Lan.html#t:StateT\" title=\"FMonad.State.Lan\">StateT</a> s mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-Adjoint.html#t:AdjointT\" title=\"FMonad.Adjoint\">AdjointT</a> (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Kan-Lan.html#t:Lan\" title=\"Data.Functor.Kan.Lan\">Lan</a> s) (<a href=\"Data-Functor-Precompose.html#t:Precompose\" title=\"Data.Functor.Precompose\">Precompose</a> s) mm x","name":"toAdjointT","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#v:toAdjointT"},{"display_html":"<a href=\"#v:toInner\">toInner</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Lan.html#t:StateT\" title=\"FMonad.State.Lan\">StateT</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s1) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x","name":"toInner","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#v:toInner"},{"display_html":"<a href=\"#v:fromInner\">fromInner</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Lan.html#t:StateT\" title=\"FMonad.State.Lan\">StateT</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s1) mm x","name":"fromInner","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#v:fromInner"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:State\">State</a> s = <a href=\"FMonad-State-Lan.html#t:StateT\" title=\"FMonad.State.Lan\">StateT</a> s <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"State","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#t:State"},{"display_html":"<a href=\"#v:state\">state</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> s, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; (s b -&gt; s a) -&gt; x b -&gt; <a href=\"FMonad-State-Lan.html#t:StateT\" title=\"FMonad.State.Lan\">StateT</a> s mm x a","name":"state","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#v:state"},{"display_html":"<a href=\"#v:runState\">runState</a> :: <a href=\"FMonad-State-Lan.html#t:State\" title=\"FMonad.State.Lan\">State</a> s x a -&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Kan-Lan.html#t:Lan\" title=\"Data.Functor.Kan.Lan\">Lan</a> s x (s a)","name":"runState","module":"FMonad.State.Lan","link":"FMonad-State-Lan.html#v:runState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StateT\">StateT</a> s mm x a = <a href=\"#v:StateT\">StateT</a> {<ul class=\"subs\"><li><a href=\"#v:runStateT\">runStateT</a> :: <span class=\"keyword\">forall</span> r. s (a -&gt; r) -&gt; mm (<a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> s x) r</li></ul>}","name":"StateT StateT runStateT","module":"FMonad.State.Day","link":"FMonad-State-Day.html#t:StateT"},{"display_html":"<a href=\"#v:flift\">flift</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> s, <a href=\"FStrong.html#t:FStrong\" title=\"FStrong\">FStrong</a> mm, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> s mm x","name":"flift","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:flift"},{"display_html":"<a href=\"#v:toOuter\">toOuter</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s0) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 mm x","name":"toOuter","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:toOuter"},{"display_html":"<a href=\"#v:fromOuter\">fromOuter</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Simple-Outer.html#t:StateT\" title=\"FMonad.State.Simple.Outer\">StateT</a> s0 mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> (<a href=\"http://hackage.haskell.org/packages/archive/ghc-prim/latest/doc/html/GHC-Tuple-Prim.html#t:-40--44--41-\" title=\"GHC.Tuple.Prim\">(,)</a> s0) mm x","name":"fromOuter","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:fromOuter"},{"display_html":"<a href=\"#v:toInner\">toInner</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> ((-&gt;) s1) mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x","name":"toInner","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:toInner"},{"display_html":"<a href=\"#v:fromInner\">fromInner</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm) =&gt; <a href=\"FMonad-State-Simple-Inner.html#t:StateT\" title=\"FMonad.State.Simple.Inner\">StateT</a> s1 mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> ((-&gt;) s1) mm x","name":"fromInner","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:fromInner"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:State\">State</a> s = <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> s <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"State","module":"FMonad.State.Day","link":"FMonad-State-Day.html#t:State"},{"display_html":"<a href=\"#v:state\">state</a> :: <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm =&gt; (<span class=\"keyword\">forall</span> r. s (a -&gt; r) -&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> s x r) -&gt; <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> s mm x a","name":"state","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:state"},{"display_html":"<a href=\"#v:state_\">state_</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> s, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; (<span class=\"keyword\">forall</span> b. s b -&gt; (s b, x a)) -&gt; <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> s mm x a","name":"state_","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:state_"},{"display_html":"<a href=\"#v:get\">get</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/day-comonoid/latest/doc/html/Data-Functor-Day-Comonoid.html#t:Comonoid\" title=\"Data.Functor.Day.Comonoid\">Comonoid</a> s, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> s mm s ()","name":"get","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:get"},{"display_html":"<a href=\"#v:put\">put</a> :: (<a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad.html#t:Comonad\" title=\"Control.Comonad\">Comonad</a> s, <a href=\"FMonad.html#t:FMonad\" title=\"FMonad\">FMonad</a> mm) =&gt; s a -&gt; <a href=\"FMonad-State-Day.html#t:StateT\" title=\"FMonad.State.Day\">StateT</a> s mm <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a> a","name":"put","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:put"},{"display_html":"<a href=\"#v:runState\">runState</a> :: <a href=\"FMonad-State-Day.html#t:State\" title=\"FMonad.State.Day\">State</a> s x a -&gt; s (a -&gt; r) -&gt; <a href=\"http://hackage.haskell.org/packages/archive/kan-extensions/latest/doc/html/Data-Functor-Day.html#t:Day\" title=\"Data.Functor.Day\">Day</a> s x r","name":"runState","module":"FMonad.State.Day","link":"FMonad-State-Day.html#v:runState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Adjoint\">Adjoint</a> ff uu = <a href=\"FComonad-Adjoint.html#t:AdjointT\" title=\"FComonad.Adjoint\">AdjointT</a> ff uu <a href=\"http://hackage.haskell.org/packages/archive/comonad/latest/doc/html/Control-Comonad-Trans-Identity.html#t:IdentityT\" title=\"Control.Comonad.Trans.Identity\">IdentityT</a>","name":"Adjoint","module":"FComonad.Adjoint","link":"FComonad-Adjoint.html#t:Adjoint"},{"display_html":"<a href=\"#v:adjoint\">adjoint</a> :: (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; ff (uu x) <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FComonad-Adjoint.html#t:Adjoint\" title=\"FComonad.Adjoint\">Adjoint</a> ff uu x","name":"adjoint","module":"FComonad.Adjoint","link":"FComonad-Adjoint.html#v:adjoint"},{"display_html":"<a href=\"#v:runAdjoint\">runAdjoint</a> :: (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; <a href=\"FComonad-Adjoint.html#t:Adjoint\" title=\"FComonad.Adjoint\">Adjoint</a> ff uu x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> ff (uu x)","name":"runAdjoint","module":"FComonad.Adjoint","link":"FComonad-Adjoint.html#v:runAdjoint"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AdjointT\">AdjointT</a> ff uu ww g x = <a href=\"#v:AdjointT\">AdjointT</a> {<ul class=\"subs\"><li><a href=\"#v:runAdjointT\">runAdjointT</a> :: ff (ww (uu g)) x</li></ul>}","name":"AdjointT AdjointT runAdjointT","module":"FComonad.Adjoint","link":"FComonad-Adjoint.html#t:AdjointT"},{"display_html":"<a href=\"#v:fffmap\">fffmap</a> :: <span class=\"keyword\">forall</span> mm nn ff uu x. (<a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> mm, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> nn, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; (<span class=\"keyword\">forall</span> y. <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> y =&gt; mm y <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> nn y) -&gt; <a href=\"FComonad-Adjoint.html#t:AdjointT\" title=\"FComonad.Adjoint\">AdjointT</a> ff uu mm x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FComonad-Adjoint.html#t:AdjointT\" title=\"FComonad.Adjoint\">AdjointT</a> ff uu nn x","name":"fffmap","module":"FComonad.Adjoint","link":"FComonad-Adjoint.html#v:fffmap"},{"display_html":"<a href=\"#v:ungeneralize\">ungeneralize</a> :: (<a href=\"FComonad.html#t:FComonad\" title=\"FComonad\">FComonad</a> ww, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> ff, <a href=\"FFunctor.html#t:FFunctor\" title=\"FFunctor\">FFunctor</a> uu, <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> x) =&gt; <a href=\"FComonad-Adjoint.html#t:AdjointT\" title=\"FComonad.Adjoint\">AdjointT</a> ff uu ww x <a href=\"FFunctor.html#t:-126--62-\" title=\"FFunctor\">~&gt;</a> <a href=\"FComonad-Adjoint.html#t:Adjoint\" title=\"FComonad.Adjoint\">Adjoint</a> ff uu x","name":"ungeneralize","module":"FComonad.Adjoint","link":"FComonad-Adjoint.html#v:ungeneralize"}]