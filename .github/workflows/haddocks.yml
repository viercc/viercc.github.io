name: Build Haddocks
on:
  # Trigger the workflow on every 1 week
  schedule:
    - cron: '16 8 * * 2'
  # Or trigger manually
  workflow_dispatch:

env:
  ghc-version: 9.8.4
  cabal-version: 3.14.1.1

jobs:
  build-docs:
    name: "Build docs"
    runs-on: ubuntu-latest
    concurrency:
      group: build-doc-group
      cancel-in-progress: false
    strategy:
      matrix:
        target-repo: ["functor-monad", "monad-gen", "polynomial-functors"]
    steps:
      - name: Get Date
        id: get-date
        run: |
          /bin/date -u "+date=%Y%m%d" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Restore ghc cache
        uses: actions/cache/restore@v4
        id: restore-ghc
        with:
          key: basis-${{ env.ghc-version }}
          path: ~/.ghcup/
      
      - name: Restore cabal cache
        uses: actions/cache/restore@v4
        id: restore-cabal
        with:
          key: dep-${{ env.ghc-version }}-${{ steps.get-date.outputs.date }}-${{ steps.get-date.outputs.hour }}-${{ github.sha }}
          restore-keys: |
            dep-${{ env.ghc-version }}-${{ steps.get-date.outputs.date }}-${{ steps.get-date.outputs.hour }}-
            dep-${{ env.ghc-version }}-${{ steps.get-date.outputs.date }}-
            dep-${{ env.ghc-version }}
          path: |
            ~/.cabal/packages/
            ~/.cabal/store/
      
      - name: Setup Haskell
        uses: haskell-actions/setup@v2.7.10
        with:
          ghc-version: ${{ env.ghc-version }}
          cabal-version: ${{ env.cabal-version }}
      
      - name: Fetch
        uses: actions/checkout@v4
        with:
          repository: viercc/${{ matrix.target-repo }}
          ref: main
          path: projects/${{ matrix.target-repo }}
      
      - name: "Get latest commit hash"
        id: get-repo-sha
        run: |
          cd projects/${{ matrix.target-repo }}
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      
      - name: Restore project-specific cache
        uses: actions/cache@v4
        id: restore-build-cache
        with:
          key: cache-${{ matrix.target-repo }}-${{ steps.get-date.outputs.date }}-${{ steps.get-date.outputs.hour }}-${{ steps.get-repo-sha.outputs.sha }}
          restore-keys: |
            cache-${{ matrix.target-repo }}-${{ steps.get-date.outputs.date }}-${{ steps.get-date.outputs.hour }}-
            cache-${{ matrix.target-repo }}-${{ steps.get-date.outputs.date }}-
            cache-${{ matrix.target-repo }}-
          path: |
            projects/${{ matrix.target-repo }}/
      
      - name: Build Docs
        shell: bash
        run: |
          set -e
          cd projects/${{ matrix.target-repo }}
          cabal haddock all \
            "--haddock-output-dir=./doc-output" \
            "--haddock-hyperlink-source" \
            "--haddock-html-location=http://hackage.haskell.org/packages/archive/$pkg/$version/doc/html"
      
      - name: Save Docs
        uses: actions/upload-artifact@v4
        with:
          name: doc-${{ matrix.target-repo }}
          path: projects/${{ matrix.target-repo }}/doc-output/
          retention-days: 1

      - name: Save cabal cache
        if: always()
        uses: actions/cache/save@v4
        id: save-cabal
        with:
          key: dep-${{ env.ghc-version }}-${{ steps.get-date.outputs.date }}-${{ steps.get-date.outputs.hour }}-${{ github.sha }}
          path: |
            ~/.cabal/packages/
            ~/.cabal/store/
      
      - name: Save ghc cache
        if: always()
        uses: actions/cache/save@v4
        id: save-ghc
        with:
          key: basis-${{ env.ghc-version }}
          path: ~/.ghcup/

  publish-results:
    name: "Publish built docs"
    runs-on: ubuntu-latest
    needs: [ build-docs ]
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref:  master
          path: site-root
      
      - uses: actions/download-artifact@v4
        with:
          name: doc-functor-monad
          merge-multiple: true
          path: site-root/haddocks/
      
      - uses: actions/download-artifact@v4
        with:
          name: doc-monad-gen
          merge-multiple: true
          path: site-root/haddocks/
      
      - uses: actions/download-artifact@v4
        with:
          name: doc-polynomial-functor
          merge-multiple: true
          path: site-root/haddocks/
      
      - name: Commit Changes
        id: commit_changes
        run: |
          cd site-root
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add haddocks
          (git commit -m "haddock generated" && echo "changed=true" >> $GITHUB_OUTPUT) || echo "changed=false" >> $GITHUB_OUTPUT
      
      - name: Push and Publish
        if: ${{ steps.commit_changes.outputs.changed == true }}
        run: |
          # push to master
          git push origin master:master
          # sync publish branch to master
          git fetch origin publish:publish
          git switch publish
          git merge --ff master
          git push origin publish:publish